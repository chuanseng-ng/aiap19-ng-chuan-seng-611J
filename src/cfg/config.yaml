database:
  path: "../data/agri.db"           # SQL DataBase path (relative/absolute path is ok)

features:
  part1:                            # Part 1 (Regression)
    target: "Temperature Sensor"    # Target variable column name
    enc_list:                       # List of column names for label encoding
      - "Plant Stage"
    corr_threshold: 0.1             # Correlation threshold value
  part2:                            # Part 2 (Classification)
    target_list:                    # Accepts 2 items as input in list to combine into new column
    - "Plant Type"
    - "Plant Stage"
    target_comb: "Plant Type-Stage" # Combined variable column name - Used as target variable column name
    corr_threshold: 0.095           # Correlation threshold value
  low_case_list:                    # List of column names to convert data to lower-case
    - "Plant Type"
    - "Plant Stage"
  nutrient_list:                    # List of column names for 'Nutrient * Sensor'
    - "Nutrient N Sensor (ppm)"
    - "Nutrient P Sensor (ppm)"
    - "Nutrient K Sensor (ppm)"
  drop_list:                        # List of column names to drop column
    - "Humidity Sensor (%)"

model:
  test_size: 0.2                    # Decimal value to determine test/train data set splitting metric
  random_state: 42                  # Random seed value
  search_method: "grid"             # Valid values are "grid/random"
  cv_num: 5                         # Number of cross-validation folds
  num_iter: 50                      # Number of iterations for RandomSearchCV 
  num_jobs: -1                       # 0 to n -> Use n number of CPUs/Logical Processors, -1 -> Use all available resources
  part1:
    task_type: "Regression"
    scoring: "neg_mean_squared_error"
    model_name_list:
      - "Linear Regression"
      - "Random Forest"
      - "SVR"
      - "MLP"
      - "Bayesian Ridge"
      - "XGBoost"
    save_model: True
  part2:
    task_type: "Classification"
    scoring: "accuracy"
    model_name_list:
      - "Logistic Regression"
      - "Random Forest"
      - "SVC"
      - "MLP"
      - "Naive Bayes"
      - "XGBoost"
    save_model: False

part1:
  rand_forest:
    est_list: # 
      - 100
      - 125
      - 150
      - 175
      - 200
      - 225
      - 250
      - 275
      - 300
    depth_list:
      - 5
      - 10
      - 15
      - 20
      - 25
      - 30

  svr:
    c_list:
      - 0.1
      - 1
      - 5
      - 10
      - 15
      - 20
    kernel_list:
      - "linear"
      - "rbf" # Radial basis function - Effective for non-linear
      - "sigmoid" # Similar to neural network

  mlp:
    hidden_layer_sizes_list:
      - [50, 50]
      - [100, 50]
      - [100, 100]
    activation_list:
      - "relu" # 
      - "tanh" # 
    solver_list:
      - "adam"
      - "sgd"
    learning_rate_list:
      - "constant"
      - "adaptive"
    max_iter_list:
      - 500
      - 1000
      - 1500
      - 2000

  bayes:
    max_iter_list:
      - 300
      - 500
      - 1000
      - 1200
      - 1500
    alpha_1_list:
      - 0.000001
      - 0.00001
      - 0.0001
      - 0.001
    alpha_2_list:
      - 0.000001
      - 0.00001
      - 0.0001
      - 0.001
    lambda_1_list:
      - 0.000001
      - 0.00001
      - 0.0001
      - 0.001
    lambda_2_list:
      - 0.000001
      - 0.00001
      - 0.0001
      - 0.001

  xgb:
    n_est_list:
      - 100
      - 200
      - 300
      - 400
      - 500
    learning_rate_list:
      - 0.01
      - 0.05
      - 0.1
    max_depth_list:
      - 3
      - 5
      - 7
      - 10
    subsample_list:
      - 0.6
      - 0.8
      - 1.0

part2:
  logistic:
    solver_list:
      - "lbfgs"
      - "liblinear"
      # - "sag" # Cannot converge for lower max_iter value
      - "newton-cg"
      - "newton-cholesky"
    max_iter_list:
      - 100
      - 125
      - 150
      - 175
      - 200
    c_list:
      - 0.1
      - 1
      - 5
      - 10
      - 15
      - 20
    class_weight_list:
      - "balanced"
      - {0: 1, 1: 1.7}
      - {0: 1, 1: 2}
      - {0: 1, 1: 5}

  rand_forest:
    est_list: # 
      - 100
      - 125
      - 150
      - 175
      - 200
      - 225
      - 250
      - 275
      - 300
    depth_list:
      - 5
      - 10
      - 15
      - 20
      - 25
      - 30
    class_weight_list:
      - "balanced"
      - {0: 1, 1: 1.7}
      - {0: 1, 1: 2}
      - {0: 1, 1: 5}

  svc:
    c_list:
      - 0.1
      - 1
      - 5
      - 10
      - 15
      - 20
    kernel_list:
      - "linear"
      - "rbf" # Radial basis function - Effective for non-linear
      - "sigmoid" # Similar to neural network
    class_weight_list:
      - "balanced"
      - {0: 1, 1: 1.7}
      - {0: 1, 1: 2}
      - {0: 1, 1: 5}

  mlp:
    hidden_layer_sizes_list:
      - [50, 50]
      - [100, 50]
      - [100, 100]
    activation_list:
      - "relu" # 
      - "tanh" # 
    solver_list:
      - "adam"
      - "sgd"
    learning_rate_list:
      - "constant"
      - "adaptive"
    max_iter_list:
      - 500
      - 1000
      - 1500
      - 2000

  bayes:
    alpha_list:
      - 0.01
      - 0.1
      - 1.0
      - 1.5
      - 2.0
      - 3.0

  xgb:
    learning_rate_list:
      - 0.01
      - 0.05
      - 0.1
    max_depth_list:
      - 3
      - 5
      - 7
      - 10
    subsample_list:
      - 0.6
      - 0.8
      - 1.0
